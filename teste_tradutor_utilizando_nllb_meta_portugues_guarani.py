# -*- coding: utf-8 -*-
"""teste tradutor utilizando nllb meta- portugues guarani

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1urfxSbFGkPb__rPZeVe4M1icK-kP0W3K
"""

!pip install transformers
!pip install sentencepiece

from transformers import AutoTokenizer, AutoModelForSeq2SeqLM

# Carregar o tokenizador e o modelo
model_name = "facebook/nllb-200-distilled-1.3B"
tokenizer = AutoTokenizer.from_pretrained(model_name)
model = AutoModelForSeq2SeqLM.from_pretrained(model_name)

def translate_text(text, source_lang="por_Latn", target_lang="gnz"):
    inputs = tokenizer(text, return_tensors="pt", padding=True)
    translated_tokens = model.generate(**inputs, forced_bos_token_id=tokenizer.lang_code_to_id[target_lang])
    translated_text = tokenizer.batch_decode(translated_tokens, skip_special_tokens=True)[0]
    return translated_text

# Defina manualmente os códigos de idioma
source_lang_code = "por_Latn"
target_lang_code = "grn_Latn"

# Função de tradução
def translate_text(text, source_lang="por_Latn", target_lang="grn_Latn"):
    # Prepara a entrada
    inputs = tokenizer(text, return_tensors="pt", padding=True)

    # Força o token de início da sequência para o idioma de destino
    target_lang_id = tokenizer.convert_tokens_to_ids(target_lang_code)

    # Gera a tradução
    translated_tokens = model.generate(
        **inputs,
        forced_bos_token_id=target_lang_id
    )

    # Decodifica o resultado
    translated_text = tokenizer.batch_decode(translated_tokens, skip_special_tokens=True)[0]
    return translated_text

import ipywidgets as widgets
from IPython.display import display

# Caixa de seleção para escolher a direção da tradução
direction = widgets.Dropdown(
    options=[('Português para Guarani', 'por_Latn-grn_Latn'), ('Guarani para Português', 'grn_Latn-por_Latn')],
    value='por_Latn-grn_Latn',
    description='Direção:',
)

# Caixa de texto para entrada
input_box = widgets.Text(
    value='',
    placeholder='Escreva o texto aqui...',
    description='Entrada:',
    layout=widgets.Layout(width='600px')
)

# Caixa de texto para saída (apenas leitura)
output_box = widgets.Text(
    value='',
    description='Tradução:',
    layout=widgets.Layout(width='600px'),
    disabled=True
)

# Função para atualizar a tradução com base no input
def on_text_change(change):
    direction_value = direction.value
    source_lang, target_lang = direction_value.split('-')
    translated_text = translate_text(change['new'], source_lang, target_lang)
    output_box.value = translated_text

# Ligar a função de atualização à mudança de texto na caixa de entrada
input_box.observe(on_text_change, names='value')

# Exibir a interface
display(direction, input_box, output_box)